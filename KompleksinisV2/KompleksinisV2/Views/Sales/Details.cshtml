@model KompleksinisV2.Models.Order
@{ bool canDo = false;}
<h2>Užsakymas: #@Model.ID</h2>
<hr />
<div class="row">
    <div class="col-xs-6"><strong>Užsakymas sukurtas:</strong> <em>@Model.CreateDate</em></div>
    <div class="col-xs-6"><strong>Kliento vardas, pavardė:</strong> <em>@Model.Client.Name @Model.Client.Surname</em></div>
</div>
<div class="row">
    <div class="col-xs-6"><strong>Užsakymo pastabos:</strong> <em>@Model.Notes</em></div>
    <div class="col-xs-6"><strong>Kliento el. paštas:</strong><em> @Model.Client.Email</em></div>
</div>
<div class="row">
    <div class="col-xs-6">
        <strong>Užsakymo būsena:</strong>@switch (Model.State.Name)
        {
            case "Sukurta": <em class="bg-danger">@Model.State.Name</em>
                break;
            case "Laukiama": <em class="bg-info">@Model.State.Name</em>
                break;
            case "Pradėta vykdyti": <em class="bg-primary">@Model.State.Name</em>
                break;
            case "Uždaryta": <em class="bg-success">@Model.State.Name</em>
                break;
        }
    </div>
    <div class="col-xs-6"><strong>Kliento telefono numeris:</strong><em> @Model.Client.PhoneNum</em></div>
</div>
<div class="row">
    <div class="col-xs-6"><strong>Užsakymą Užregistravo:</strong> <em>@Model.Employee.Name @Model.Employee.Surname</em></div>
    <div class="col-xs-6"><strong>Kliento adresas:</strong><em> @Model.Client.Adress</em></div>
</div>
<hr />
@if (Model.OrderItems.Count == 0)
{
    <h3 class="text-center text-danger">Nėra priskirtų prekių!</h3>
}
else
{
    <table class="table table-hover">
        <tr>
            <td><Strong>#</Strong></td>
            <td><Strong>Pavadinimas</Strong></td>
            <td><Strong>Kaina (kg)</Strong></td>
            <td><Strong>Kiekis (kg)</Strong></td>
            <td><strong>Kaina prekės</strong></td>
            @if (Model.State.Name == "Sukurta")
            {
                <td><strong>Nustatymai</strong></td>
            }
            else
            {
                <td><strong>Pelnas</strong></td>
            }

        </tr>
        @foreach (var item in Model.OrderItems)
        {
            <tr>
                <td>@item.ProductID</td>
                <td>@item.Product.Name</td>
                <td>@item.Price</td>
                @if (Model.State.Name == "Laukiama")
                {
                    @if (Model.OrderItems.Where(c => c.ProductID == item.ProductID).Sum(x => x.Quantity) <= item.Product.Quantity)
                    {
                        <td>@item.Quantity <i class="text-success">(@Model.OrderItems.Where(c => c.ProductID == item.ProductID).Sum(x => x.Quantity)/@item.Product.Quantity)</i></td>
                    }
                    else if (canDo = true) /*Neradau budo kaip pakeisti reiksme, jos neatvaizduojant*/
                    {
                        <td>@item.Quantity <i class="text-danger">(@Model.OrderItems.Where(c => c.ProductID == item.ProductID).Sum(x => x.Quantity)/@item.Product.Quantity)</i></td>
                    }
                }
                else
                {
                    <td>@item.Quantity</td>

                }

                @if (Model.State.Name == "Sukurta" || Model.State.Name == "Laukiama")
                {
                    <td>@(item.Price * item.Quantity) €</td>
                }
                else
                {
                    <td>@item.TotalPrice €</td>
                }
                <td>
                    @if (Model.State.Name == "Sukurta")
                    {
                        <button type="button" class="btn btn-danger btn-xs" onclick="ajaxDelete(@item.ID)"><i class="fas fa-ban"></i></button>
                    }
                    else if (Model.State.Name == "Laukiama")
                    {
                        @if (item.Price * item.Quantity > item.Product.Price * item.Quantity)
                        {
                            <i class="text-success">@(item.Price * item.Quantity - item.Product.Price * item.Quantity) €</i>
                        }
                        else
                        {
                            <i class="text-danger">@(item.Price * item.Quantity - item.Product.Price * item.Quantity) €</i>
                        }

                    }
                    else
                    {
                        @if (item.TotalProfit > 0)
                        {
                            <i class="text-success">@item.TotalProfit €</i>
                        }
                        else
                        {
                            <i class="text-danger">@item.TotalProfit €</i>
                        }
                    }

                </td>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td><strong>Iš viso:</strong></td>
            @if (Model.State.Name == "Sukurta" || Model.State.Name == "Laukiama")
            {
                <td class="text-primary">@Model.OrderItems.Sum(x => x.Price * x.Quantity) €</td>
            }
            else
            {
                <td class="text-primary">@Model.TotalPrice €</td>
            }

            @if (Model.State.Name == "Sukurta")
            {
                <td></td>

            }
            else if (Model.State.Name == "Laukiama")
            {
                <td class="text-primary">@(Model.OrderItems.Sum(x => x.Price * x.Quantity) - Model.OrderItems.Sum(x => x.Product.Price * x.Quantity)) €</td>
            }
            else
            {
                @if (Model.TotalProfit > 0)
                {
                    <td class="text-success">@Model.TotalProfit €</td>

                }
                else
                {
                    <td class="text-danger">@Model.TotalProfit €</td>

                }

            }
        </tr>
    </table>
    @if (Model.State.Name == "Sukurta")
    {
        <button type="button" onclick="ajaxMove(@Model.ID)" class="btn btn-success">Pradėti užsakymą</button>
    }
    else if (Model.State.Name == "Laukiama")
    {
        @if (!canDo)
        {
            <button type="button" onclick="ajaxStart(@Model.ID)" class="btn btn-success">Pradėti užsakymo vykdymą</button>
        }
        else
        {
            <h3 class="text-center text-danger">Nėra sandelyje reikalingų visų prekių!</h3>
        }

    }
    else if (Model.State.Name == "Pradėta vykdyti")
    {
        <h4><strong>Užsakymas pradėtas vykdyti:</strong> <em>@Model.StartedDate</em></h4>
        <button type="button" onclick="ajaxEnd(@Model.ID)" class="btn btn-success">Užbaigti užsakymą</button>
    }
    else if (Model.State.Name == "Uždaryta")
    {
        <h4><strong>Užsakymas pradėtas vykdyti:</strong> <em>@Model.StartedDate</em></h4>
        <h4><strong>Užsakymas uždarytas:</strong> <em>@Model.FinishDate</em></h4>
    }
}

<hr />
@if (Model.State.Name == "Sukurta")
{
    <h3>Pridėti prekę prie užsakymo:</h3>
    @await Component.InvokeAsync("AddProduct", new { orderID = Model.ID })
}


<script type="text/javascript">
    $(document).ready(function () {
        if ( "@(Model.State.Name)" == "Sukurta") {
            var label = $('label[for="Price"]');
            var parenta = label["0"].innerHTML;
            wat($('#ProductID')["0"].value, label, parenta);

            $('select').on('change', function () {
                var label = $('label[for="Price"]');
                wat(this.value, label, parenta);
            })
        }

    });

    function wat(id,label,parenta)
    {
        $.ajax({
            type: "POST",
            url: "/Sales/GetProductPrice/" + id,
            data: {
                id: id,
            },
            success: function (data) {
                    label["0"].innerHTML = parenta + '<em class="text-danger"> Savikaina prekės: ' + data + ' €/kg</em>';
            }
        });

    }


    function ajaxDelete(id) {
        $.ajax({
            type: "POST",
            url: "/Sales/DeleteProductFromOrder/" + id,
            data: {
                id: id,
                parent: @Model.ID
            },
            success: function (result) {
                location.reload();
            },
            error: function (result) {
            }
            });
        }
        // from sukurtas to laukiama
        function ajaxMove(id) {
            $.ajax({
                type: "POST",
                url: "/Sales/MoveToWaiting/" + id,
                data: {
                    id: id
                },
                success: function (result) {
                    location.reload();
                },
                error: function (result) { }
            });
        }

        //from laukiama to pradetas vykdyti
        function ajaxStart(id) {
            $.ajax({
                type: "POST",
                url: "/Sales/MoveToStarted/" + id,
                data: {
                    id: id
                },
                success: function (result) {
                    location.reload();
                },
                error: function (result) { }
            });
        }
        //from pradetas to finish
        function ajaxEnd(id) {
            $.ajax({
                type: "POST",
                url: "/Sales/MoveToFinish/" + id,
                data: {
                    id: id
                },
                success: function (result) {
                    location.reload();
                },
                error: function (result) { }
            });

        }

</script>